{
  "uid" : "3102d887a09ff3b",
  "name" : "test_enter_class",
  "fullName" : "TestCases.test_course.TestCourseG#test_enter_class",
  "historyId" : "53290d88e20d2317f31f454c1fd13191",
  "time" : {
    "start" : 1594726152249,
    "stop" : 1594726250437,
    "duration" : 98188
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False\n +  where False = <bound method ClassPage.if_active_is_exist of <PageObjects.class_page.ClassPage object at 0x000002016D273E48>>()\n +    where <bound method ClassPage.if_active_is_exist of <PageObjects.class_page.ClassPage object at 0x000002016D273E48>> = <PageObjects.class_page.ClassPage object at 0x000002016D273E48>.if_active_is_exist",
  "statusTrace" : "self = <TestCases.test_course.TestCourseG object at 0x000002016D136D30>\ncourse_grid = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"c60590e6072e76557b12b19d7e92b2fa\")>, <PageObjects.index_page...6D273D68>, ('MDAwMDAwMDAwMLSsqZWHuclq', 'HJR988', <API.api_course_operate.CourseOperate object at 0x000002016D0F3E10>))\n\n    def test_enter_class(self, course_grid):\n        # 1、有已加入的课程\n        # course_grid[1].add_in_course(course_grid[2][1])\n        course_grid[1].enter_class(course_grid[2][0])\n        cp = ClassPage(course_grid[0])\n        cur_url = cd.base_url + cd.class_url.format(course_grid[2][0])\n>       assert cp.if_active_is_exist()\nE       assert False\nE        +  where False = <bound method ClassPage.if_active_is_exist of <PageObjects.class_page.ClassPage object at 0x000002016D273E48>>()\nE        +    where <bound method ClassPage.if_active_is_exist of <PageObjects.class_page.ClassPage object at 0x000002016D273E48>> = <PageObjects.class_page.ClassPage object at 0x000002016D273E48>.if_active_is_exist\n\nC:\\Users\\86186\\PycharmProjects\\web\\TestCases\\test_course.py:33: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "init_course",
    "time" : {
      "start" : 1594726034231,
      "stop" : 1594726034732,
      "duration" : 501
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "course_grid",
    "time" : {
      "start" : 1594726086221,
      "stop" : 1594726152245,
      "duration" : 66024
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False\n +  where False = <bound method ClassPage.if_active_is_exist of <PageObjects.class_page.ClassPage object at 0x000002016D273E48>>()\n +    where <bound method ClassPage.if_active_is_exist of <PageObjects.class_page.ClassPage object at 0x000002016D273E48>> = <PageObjects.class_page.ClassPage object at 0x000002016D273E48>.if_active_is_exist",
    "statusTrace" : "self = <TestCases.test_course.TestCourseG object at 0x000002016D136D30>\ncourse_grid = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"c60590e6072e76557b12b19d7e92b2fa\")>, <PageObjects.index_page...6D273D68>, ('MDAwMDAwMDAwMLSsqZWHuclq', 'HJR988', <API.api_course_operate.CourseOperate object at 0x000002016D0F3E10>))\n\n    def test_enter_class(self, course_grid):\n        # 1、有已加入的课程\n        # course_grid[1].add_in_course(course_grid[2][1])\n        course_grid[1].enter_class(course_grid[2][0])\n        cp = ClassPage(course_grid[0])\n        cur_url = cd.base_url + cd.class_url.format(course_grid[2][0])\n>       assert cp.if_active_is_exist()\nE       assert False\nE        +  where False = <bound method ClassPage.if_active_is_exist of <PageObjects.class_page.ClassPage object at 0x000002016D273E48>>()\nE        +    where <bound method ClassPage.if_active_is_exist of <PageObjects.class_page.ClassPage object at 0x000002016D273E48>> = <PageObjects.class_page.ClassPage object at 0x000002016D273E48>.if_active_is_exist\n\nC:\\Users\\86186\\PycharmProjects\\web\\TestCases\\test_course.py:33: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "96b938cda04dd8d3",
      "name" : "log",
      "source" : "96b938cda04dd8d3.txt",
      "type" : "text/plain",
      "size" : 3290
    }, {
      "uid" : "eb664ab07352ca18",
      "name" : "stderr",
      "source" : "eb664ab07352ca18.txt",
      "type" : "text/plain",
      "size" : 127
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "init_course::0",
    "time" : {
      "start" : 1594726724689,
      "stop" : 1594726725013,
      "duration" : 324
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "course_grid::0",
    "time" : {
      "start" : 1594726250469,
      "stop" : 1594726252537,
      "duration" : 2068
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('course_grid')"
  }, {
    "name" : "parentSuite",
    "value" : "TestCases"
  }, {
    "name" : "suite",
    "value" : "test_course"
  }, {
    "name" : "subSuite",
    "value" : "TestCourseG"
  }, {
    "name" : "host",
    "value" : "DESKTOP-KFH4O7N"
  }, {
    "name" : "thread",
    "value" : "20728-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCases.test_course"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "@pytest.mark.usefixtures('course_grid')" ]
  },
  "source" : "3102d887a09ff3b.json",
  "parameterValues" : [ ]
}